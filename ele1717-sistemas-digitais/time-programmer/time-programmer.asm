;====================================================================
; MAIN.ASM FILE GENERATED BY NEW PROJECT WIZARD
; GRUPO 01 - SEMANA 8 - PROGRAMADOR HORÁRIO
; CREATED:   QUA OUT 28 2020
; PROCESSOR: ATMEGA328P
; COMPILER:  AVRASM (PROTEUS)
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

.INCLUDE "M328PDEF.INC"
.ORG 0

.EQU MOSI = 3
.EQU SCK = 5
.EQU SS1 = 2
.EQU SS2 = 0

;====================================================================
; DEFINITIONS
;====================================================================
      ;R17 - REG_POINTER
      ;R18 - REG_TWOF
      ;R19 - REG_HOUR_R
      ;R20 - REG_MIN_R
      ;R21 - REG_WEEK_R
      ;R22 - REG_HOUR_ON
      ;R23 - REG_MIN_ON
      ;R24 - REG_WEEK_ON
      ;R25 - REG_HOUR_OFF
      ;R26 - REG_MIN_OFF
      ;R27 - REG_WEEK_OFF
      
      ;1 - SAIDA
      ;0 - ENTRADA
      
      ; CONFIGURA PORT B
      ;PB0,PB1,PB2,PB3,PB5,PB7 - SAIDAS;
      ;PB4,PB6 - ENTRADAS;
      LDI R16, 0B1010_1111
      OUT DDRB, R16
      
      ; CONFIGURA PORT C
      ;PC0,PC1,PC2 - SAIDA;
      ;PC3,PC4,PC5,PC6 - ENTRADAS;
      LDI R16, 0B0000_0111
      OUT DDRC, R16
      
      ; CONFIGURA PORT D
      ;PD0,PD1,PD2,PD3 - SAIDA;
      ;PD4,PD5,PD6,PD7 - ENTRADAS;
      LDI R16, 0B0000_1111
      OUT DDRD, R16
      
      
      ;; CONFIGURA TIMER1 PARA OS LEDS PISCANDO;
      LDI R16,0B00000000
      STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
      LDI R16, 0B00001000 ;SET TIME CTC MODE, SET PREESCALER
      STS TCCR1B, R16
      LDI R16,0B0000_0000
      LDI R17,0B1001_0001
      STS OCR1AH, R16
      STS OCR1AL, R17
      LDI R16, 0B00001100 ;SET TIME CTC MODE, SET PREESCALER
      STS TCCR1B, R16
      
      
      ; HABILITA SPI E CLOCK DO MESTRE
      LDI R30,(1<<SPE) | (1<<MSTR); HABILITA SPI
      OUT SPCR, R30 ; ATMEGA MESTRE COM CLOCK = FCK/4


      LDI R30, 0B00000111
      OUT DDRC, R30

      SBI PORTB, SS1
      SBI PORTB, SS2

      LDI R16, 0X09 ;DECODE MODE DO MAX7221
      LDI R29, 0B00001111 ;HABILITA O DECODE PARA OS DIGITOS DE 0 A 3
      RCALL RUNCMD
	 
      LDI R16, 0X0B ;SCAN LIMIT
      LDI R29, 0X03 ; SCAN QUATRO DISPLAYS 7SEG
      RCALL RUNCMD
	 
      LDI R16, 0X0C ; COMANDO DE LIGA/DESLIGA
      LDI R29, 0X01 ; LIGA O CI
      RCALL RUNCMD
	 
      LDI R16, 0X00 ; COMANDO DE LIGA/DESLIGA
      LDI R29, 0X00 ; LIGA O CI
      RCALL RUNCMD
      
      RJMP START


;--------------------ESTADO START. CONFORME A MDE, A MÁQUINA DÁ CLEAR EM TODOS OS REGISTRADORES USADOS E PRESET
;--------------------NO VALOR DO REGISTRADOR DE DIAS DA SEMANA PARA SELECIONAR O DOMINGO COMO PONTO INICIAL DO
;--------------------PRÓXIMO ESTADO E VAI DIRETO PARA O ESTDAO RUN.------------------------------------------------------
START:
    CLR R17
    CLR R18
    CLR R19
    CLR R20
    CLR R21
    CLR R22
    CLR R23
    CLR R24
    CLR R25
    CLR R26
    CLR R27

;----------ESTADO RUN. CHECA SE TÁ NO INTERVALO DE ALARME E MODIFICA O OUT. ALÉM DISSO, CHECA QUAL BOTÃO FOI APERTADO: A OU R--------------------------------
RUN:
    SBIC PIND, PD7 ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO
    JMP RUN ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO

    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP RUN ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO


    ;LIMPA LEDS DE ESTADOS E TIMER--------------------
    LDI R16, 0B00000000
    STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
    STS TCNT1H, R16 ;CLEAR CONTADOR
    STS TCNT1L, R16 ;CLEAR CONTADOR
    CBI PORTB, 1 ;CLEAR PB1
    CBI PORTD, 0
    CBI PORTD, 1
    CBI PORTD, 2
    CBI PORTD, 3


RUNEAE:
    RJMP RTC_MINUTOS

    MOV R24, R21
    CPI R24, 0B00000001
    BREQ DOMINGOH
    CPI R24, 0B00000010
    BREQ SEGUNDAH
    CPI R24, 0B00000011
    BREQ TERCAH
    CPI R24, 0B00000100
    BREQ QUARTAH
    CPI R24, 0B00000101
    BREQ QUINTAH
    CPI R24, 0B00000110
    BREQ SEXTAH
    CPI R24, 0B00000111
    BREQ SABADOH

DOMINGOH:
    SBI PORTC, PC0
    CBI PORTC, PC1
    CBI PORTC, PC2
    RJMP VOLTA1

SEGUNDAH:
    CBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP VOLTA1

TERCAH:
    SBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP VOLTA1

QUARTAH:
    CBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP VOLTA1

QUINTAH:
    SBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP VOLTA1

SEXTAH:
    CBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP VOLTA1

SABADOH:
   SBI PORTC, PC0
   SBI PORTC, PC1
   SBI PORTC, PC2
   RJMP VOLTA1
   
VOLTA1:
    CBI PORTB, SS1
    LDI R16, 0X05 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_HORAS ;ENVIA OS DADOS DE HORA PARA O CI 6902
    RCALL DEZENA_HORAS ;SEPARA A DEZENA E UNIDADE DOS DADOS DA HORA
    RCALL DISPLAY_HORAS1 ;MOSTRA OS DADOS DA HORA NO DISPLAY
    LDI R16, 0X03 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_MINUTOS
    RCALL DEZENA_MINUTOS
    RCALL DISPLAY_MINUTOS1
    LDI R16, 0X0B ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_DIAS

    SBIC PIND, PD6 ; SE O PINO PC2 ESTIVER EM BAIXO, A PRÓXIMA INSTRUÇÃO NÃO É EXECUTADA, OU SEJA, A PESSOA NÃO APERTOU O BOTÃO A
    JMP AJUSTE_AGENDAMENTO_INICIO ; SE PULOU PARA AQUI, É PQ O O BOTÃO A FOI APERTADO, ENTÃO VAI PARA O AJUSTE DO AGENDAMENTO
    SBIC PIND, PD7 ; CHEGOU AQUI PQ O BOTAO ANTERIOR NÃO ESTAVA APERTADO. ENTÃO, SE O PINO PC3 ESTIVER NÃO ESTIVER EM ALTO, A PRÓXIMA INSTRUÇÃO NÃO É EXECUTADA, OU SEJA, A PESSOA NÃO APERTOU O BOTÃO R
    JMP AJUSTE_RELOGIO ; SE PULOU PARA AQUI, É PQ O O BOTÃO R FOI APERTADO, ENTÃO VAI PARA O AJUSTE DO RELÓGIO

    RJMP COMP_H

;----ESTADO DE AJUSTE DE RELÓGIO, SÓ CHEGOU AQUI SE O PC3 (BOTÃO R) ESTAVA ATIVO--------------
AJUSTE_RELOGIO:
    JMP TIMER_H

;----ESTADO DE AJUSTE DO INICIO DO AGENDAMENTO, SÓ CHEGOU AQUI SE O PC2 (BOTÃO A) ESTAVA ATIVO--------------
AJUSTE_AGENDAMENTO_INICIO:
    MOV R24, R21
    STS 0X90, R24
    MOV R22, R19
    MOV R23, R20

    JMP ON_H

;----ESTADO DE AJUSTE DO FIM DO AGENDAMENTO--------------
AJUSTE_AGENDAMENTO_FIM:
    MOV R25, R22
    MOV R26, R23
    MOV R27, R21

    JMP OFF_H

TIMER_H:
    SBIC PIND, PD7 ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO
    RJMP TIMER_H ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO

    ;ACENTE LED T--------------------
    SBI PORTD, 0

TIMER_HEAE:  
    ;;;;;;;;;SPI ESCREVE HORA;;;;;;;;;;
    CBI PORTB, SS1
    LDI R16, 0X05 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_HORAS ;ENVIA OS DADOS DE HORA PARA O CI 6902
    RCALL DEZENA_HORAS ;SEPARA A DEZENA E UNIDADE DOS DADOS DA HORA
    RCALL DISPLAY_HORAS1 ;MOSTRA OS DADOS DA HORA NO DISPLAY
    RCALL APAGA_DISPLAY_MINUTOS ;APAGA OS DISPLAY DOS MINUTOS
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDI R17, 0B00000001 ; VALOR DO PONTEIRO DO TIMER_H
    SBIC PIND, PD7 ; CHECA: SE O BOTÃO R NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP TIMER_M ; SE CHEGOU AQUI É PQ APERTOU O BOTAO R, ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO RELOGIO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP TIMER_HEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR


TIMER_M:
    SBIC PIND, PD7 ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO
    RJMP TIMER_M ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO

    ;ACIONA TIMER PARA LED PISCAR--------------------
    LDI R16, 0B01000000
    STS TCCR1A, R16 ;TOGGLE PB1/AC1A

TIMER_MEAE:
    CBI PORTB, SS1
    LDI R16, 0X03 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_MINUTOS
    RCALL DEZENA_MINUTOS
    RCALL DISPLAY_MINUTOS1
    RCALL APAGA_DISPLAY_HORAS

    LDI R17, 0B00000010
    SBIC PIND, PD7 ; CHECA: SE O BOTÃO R NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP WEEK ; SE CHEGOU AQUI É PQ APERTOU O BOTAO R, ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO RELOGIO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP TIMER_MEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR

WEEK:
    SBIC PIND, PD7 ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO
    JMP WEEK ; SO PRA GARANTIR QUE O BOTAO R FOI SOLTO

    ;CLEAR NO TIMER E ACENDE LED W--------------------
    LDI R16, 0B00000000
    STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
    STS TCNT1H, R16 ;CLEAR CONTADOR
    STS TCNT1L, R16 ;CLEAR CONTADOR
    CBI PORTB, 1 ;CLEAR PB1
    LDI R16, 0B01000000
    STS TCCR1A, R16 ;TOGGLE PB1/AC1A
    SBI PORTD, 1

    ;MOV R16, R21
    ;ANDI R21, 0B00000111

    CPI R21, 0B00000001
    BREQ DOMINGO
    CPI R21, 0B00000010
    BREQ SEGUNDA
    CPI R21, 0B00000011
    BREQ TERCA
    CPI R21, 0B00000100
    BREQ QUARTA
    CPI R21, 0B00000101
    BREQ QUINTA
    CPI R21, 0B00000110
    BREQ SEXTA
    CPI R21, 0B00000111
    BREQ SABADO

DOMINGO:
    SBI PORTC, PC0
    CBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEKEAE

SEGUNDA:
    CBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEKEAE

TERCA:
    SBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEKEAE

QUARTA:
    CBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEKEAE

QUINTA:
    SBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEKEAE

SEXTA:
    CBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEKEAE

SABADO:
    SBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEKEAE

WEEKEAE: 
    LDI R16, 0X0B ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
    CBI PORTB, SS1
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_DIAS
    RCALL DEZENA_HORAS
    RCALL DISPLAY_HORAS1

    LDI R17, 0B00000011
    SBIC PIND, PD7 ; CHECA: SE O BOTÃO R NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP RUN ; SE CHEGOU AQUI É PQ APERTOU O BOTAO R, ENTAO ACABOU O AJUSTE DE RELOGIO E VOLTA PRO RUN
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP WEEKEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR



ON_H:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP ON_H ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;ACENDE LED O--------------------
    SBI PORTD,2


ON_HEAE: 
    ;;;;;;;;;SPI ESCREVE HORA;;;;;;;;;;
    CBI PORTB, SS1
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_HORAS_ON ;ENVIA OS DADOS DE HORA PARA O CI 6902
    RCALL DEZENA_HORAS_ON ;SEPARA A DEZENA E UNIDADE DOS DADOS DA HORA
    RCALL DISPLAY_HORAS1 ;MOSTRA OS DADOS DA HORA NO DISPLAY
    RCALL APAGA_DISPLAY_MINUTOS ;APAGA OS DISPLAY DOS MINUTOS
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDI R17, 0B00000100
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP ON_M ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO AGENDAMENTO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP ON_HEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR


ON_M:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP ON_M ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;ACIONA LED PISCANDO--------------------
    LDI R16, 0B01000000
    STS TCCR1A, R16 ;TOGGLE PB1/AC1A

ON_MEAE:
    CBI PORTB, SS1
    LDI R16, 0X03 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_MINUTOS_ON
    RCALL DEZENA_MINUTOS_ON
    RCALL DISPLAY_MINUTOS1
    RCALL APAGA_DISPLAY_HORAS

    LDI R17, 0B00000101
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP WEEK_ON ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO AGENDAMENTO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP ON_MEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR

WEEK_ON:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP WEEK_ON ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;CLEAR TIMER E ACENDE LED W--------------------
    LDI R16, 0B00000000
    STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
    STS TCNT1H, R16 ;CLEAR CONTADOR
    STS TCNT1L, R16 ;CLEAR CONTADOR
    CBI PORTB, 1 ;CLEAR PB1
    LDI R16, 0B01000000
    STS TCCR1A, R16 ;TOGGLE PB1/AC1A
    SBI PORTD, 1;

    MOV R16, R21
    ANDI R16, 0B00000111

    CPI R16, 0B00000001
    BREQ DOMINGO1
    CPI R16, 0B00000010
    BREQ SEGUNDA1
    CPI R16, 0B00000011
    BREQ TERCA1
    CPI R16, 0B00000100
    BREQ QUARTA1
    CPI R16, 0B00000101
    BREQ QUINTA1
    CPI R16, 0B00000110
    BREQ SEXTA1
    CPI R16, 0B00000111
    BREQ SABADO1

DOMINGO1:
    SBI PORTC, PC0
    CBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_ONEAE

SEGUNDA1:
    CBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_ONEAE

TERCA1:
    SBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_ONEAE

QUARTA1:
    CBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_ONEAE

QUINTA1:
    SBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_ONEAE

SEXTA1:
    CBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_ONEAE

SABADO1:
    SBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_ONEAE

WEEK_ONEAE:
    LDI R16, 0X0B ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
    CBI PORTB, SS1
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_DIAS_ON
    RCALL DEZENA_HORAS_ON
    RCALL DISPLAY_HORAS1


    LDI R17, 0B00000110
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP AJUSTE_AGENDAMENTO_FIM ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO AGENDAMENTO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP WEEK_ONEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR

OFF_H:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP OFF_H ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;CLEAR TIMER, LEDS E ACENDE LED F--------------------
    LDI R16, 0B00000000
    STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
    STS TCNT1H, R16 ;CLEAR CONTADOR
    STS TCNT1L, R16 ;CLEAR CONTADOR
    CBI PORTB, 1 ;CLEAR PB1
    CBI PORTD, 2
    CBI PORTD, 1
    SBI PORTD, 3

OFF_HEAE:
 ;;;;;;;;;SPI ESCREVE HORA;;;;;;;;;;
    CBI PORTB, SS1
    LDI R16, 0X05 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_HORAS_OFF ;ENVIA OS DADOS DE HORA PARA O CI 6902
    RCALL DEZENA_HORAS_OFF ;SEPARA A DEZENA E UNIDADE DOS DADOS DA HORA
    RCALL DISPLAY_HORAS1 ;MOSTRA OS DADOS DA HORA NO DISPLAY
    RCALL APAGA_DISPLAY_MINUTOS ;APAGA OS DISPLAY DOS MINUTOS
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    LDI R17, 0B00000111
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP OFF_M ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO AGENDAMENTO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP OFF_HEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR


OFF_M:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP OFF_M ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;ACIONA LED PISCANDO--------------------
    LDI R16, 0B01000000 ;TOGGLE PB1/AC1A
    STS TCCR1A, R16

OFF_MEAE:
    CBI PORTB, SS1
    LDI R16, 0X03 ;CARREGA O ENDEREÇO DE ESCRITA DOS MINUTOS
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_MINUTOS_OFF
    RCALL DEZENA_MINUTOS_OFF
    RCALL DISPLAY_MINUTOS1
    RCALL APAGA_DISPLAY_HORAS

    LDI R17, 0B00001000
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP WEEK_OFF ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO VAI PRA O PROXIMO ESTADO DA SEQUENCIA DE AJUSTE DO AGENDAMENTO
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP OFF_MEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR


WEEK_OFF:
    SBIC PIND, PD6 ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO
    JMP WEEK_OFF ; SO PRA GARANTIR QUE O BOTAO A FOI SOLTO

    ;CLEAR TIMER E ACENDE LED W--------------------
    LDI R16, 0B00000000
    STS TCCR1A, R16 ;SET NORMAL PORT, AC1A DISCONNECTED
    STS TCNT1H, R16 ;CLEAR CONTADOR
    STS TCNT1L, R16 ;CLEAR CONTADOR
    CBI PORTB, 1 ;CLEAR PB1
    LDI R16, 0B01000000
    STS TCCR1A, R16 ;TOGGLE PB1/AC1A
    SBI PORTD, 1;

    MOV R16, R27
    ANDI R16, 0B00000111

    CPI R16, 0B00000001
    BREQ DOMINGO2
    CPI R16, 0B00000010
    BREQ SEGUNDA2
    CPI R16, 0B00000011
    BREQ TERCA2
    CPI R16, 0B00000100
    BREQ QUARTA2
    CPI R16, 0B00000101
    BREQ QUINTA2
    CPI R16, 0B00000110
    BREQ SEXTA2
    CPI R16, 0B00000111
    BREQ SABADO2

DOMINGO2:
    SBI PORTC, PC0
    CBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_OFFEAE

SEGUNDA2:
    CBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_OFFEAE

TERCA2:
    SBI PORTC, PC0
    SBI PORTC, PC1
    CBI PORTC, PC2
    RJMP WEEK_OFFEAE

QUARTA2:
    CBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_OFFEAE

QUINTA2:
    SBI PORTC, PC0
    CBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_OFFEAE

SEXTA2:
    CBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_OFFEAE

SABADO2:
    SBI PORTC, PC0
    SBI PORTC, PC1
    SBI PORTC, PC2
    RJMP WEEK_OFFEAE

WEEK_OFFEAE:
    LDI R16, 0X0B ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
    CBI PORTB, SS1
    OUT SPDR, R16 ;ENVIAR O ENDEREÇO
    RCALL ENVIA_DIAS_OFF
    RCALL DEZENA_HORAS_OFF
    RCALL DISPLAY_HORAS1


    LDI R17, 0B00001001
    SBIC PIND, PD6 ; CHECA: SE O BOTÃO A NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    RJMP RUNAUX ; SE CHEGOU AQUI É PQ APERTOU O BOTAO A,  ENTAO O AJUSTE DE AGENDAMENTO ACABOU. VOLTA PARA O ESTADO RUN
    SBIC PIND, PD5 ; CHECA: SE O BOTÃO UP NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP INCREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO UP, ENTAO VAI PRA O ESTADO DE INCREMENTO
    SBIC PIND, PD4 ; CHECA: SE O BOTÃO DOWN NAO ESTIVER APERTADO, PULA A PROXIMA INSTRUCAO
    JMP DECREMENTO ; SE CHEGOU AQUI É PQ APERTOU O BOTAO DOWN, ENTAO VAI PRA O ESTADO DE DECREMENTO
    JMP WEEK_OFFEAE ; SE CHEGOU AQUÍ É PQ NAO APERTOU NADA. VOLTA ATÉ APERTAR

RUNAUX:
    MOV R21, R24
    RJMP RUN


;-----ESTADO DE INCREMENTO: PULA PARA O INCREMENTO DE ACORDO COM O PONTEIRO-------
INCREMENTO:
    SBIC PIND, PD5 ; SO PRA GARANTIR QUE O BOTAO UP FOI SOLTO
    JMP INCREMENTO ; SO PRA GARANTIR QUE O BOTAO UP FOI SOLTO

    CPI R17, 0B00000001
    BREQ INC_REG_HOUR_RA  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 
    JMP EAE2

INC_REG_HOUR_RA: 
    JMP INC_REG_HOUR_R

EAE2:
    CPI R17, 0B00000010
    BREQ INC_REG_MIN_RA
    JMP EAE3

INC_REG_MIN_RA: 
    JMP INC_REG_MIN_R  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE3:
    CPI R17, 0B00000011
    BREQ INC_REG_WEEK_RA
    JMP EAE4

INC_REG_WEEK_RA: 
    JMP INC_REG_WEEK_R  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE4:
    CPI R17, 0B00000100
    BREQ INC_REG_HOUR_ONA
    JMP EAE5
    INC_REG_HOUR_ONA : JMP INC_REG_HOUR_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE5:
    CPI R17, 0B00000101
    BREQ INC_REG_MIN_ONA
    JMP EAE6

INC_REG_MIN_ONA: 
    JMP INC_REG_MIN_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE6:
    CPI R17, 0B00000110
    BREQ INC_REG_WEEK_ONA
    JMP EAE7
    INC_REG_WEEK_ONA : JMP INC_REG_WEEK_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE7:
    CPI R17, 0B00000111
    BREQ INC_REG_HOUR_OFFA
    JMP EAE8

INC_REG_HOUR_OFFA: 
    JMP INC_REG_HOUR_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE8:
    CPI R17, 0B00001000
    BREQ INC_REG_MIN_OFFA
    JMP EAE9

INC_REG_MIN_OFFA: 
    JMP INC_REG_MIN_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE9:
    CPI R17, 0B00001001
    BREQ INC_REG_WEEK_OFFA

INC_REG_WEEK_OFFA: 
    JMP INC_REG_WEEK_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 


;-----ESTADO DE DECREMENTO: PULA PARA O INCREMENTO DE ACORDO COM O PONTEIRO-------
DECREMENTO:
    SBIC PIND, PD4 ; SO PRA GARANTIR QUE O BOTAO DOWN FOI SOLTO
    JMP DECREMENTO ; SO PRA GARANTIR QUE O BOTAO DOWN FOI SOLTO

    CPI R17, 0B00000001
    BREQ DEC_REG_HOUR_RA
    JMP EAE10
    DEC_REG_HOUR_RA : JMP DEC_REG_HOUR_R  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE10:
    CPI R17, 0B00000010
    BREQ DEC_REG_MIN_RA
    JMP EAE11
    DEC_REG_MIN_RA : JMP DEC_REG_MIN_R  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE11:
    CPI R17, 0B00000011
    BREQ DEC_REG_WEEK_RA
    JMP EAE12

DEC_REG_WEEK_RA: 
    JMP DEC_REG_WEEK_R  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE12:
    CPI R17, 0B00000100
    BREQ DEC_REG_HOUR_ONA
    JMP EAE13

DEC_REG_HOUR_ONA: 
    JMP DEC_REG_HOUR_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE13:
    CPI R17, 0B00000101
    BREQ DEC_REG_MIN_ONA
    JMP EAE14

DEC_REG_MIN_ONA: 
    JMP DEC_REG_MIN_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE14:
    CPI R17, 0B00000110
    BREQ DEC_REG_WEEK_ONA
    JMP EAE15

DEC_REG_WEEK_ONA: 
    JMP DEC_REG_WEEK_ON  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE15:
    CPI R17, 0B00000111
    BREQ DEC_REG_HOUR_OFFA
    JMP EAE16
    DEC_REG_HOUR_OFFA : JMP DEC_REG_HOUR_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE16:
    CPI R17, 0B00001000
    BREQ DEC_REG_MIN_OFFA
    JMP EAE17

DEC_REG_MIN_OFFA: 
    JMP DEC_REG_MIN_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 

EAE17:
    CPI R17, 0B00001001
    BREQ DEC_REG_WEEK_OFFA

DEC_REG_WEEK_OFFA: 
    JMP DEC_REG_WEEK_OFF  ; TIVE QUE FAZER ESSE "AJUSTE", PQ O BREQ TEM LIMITAÇÃO DE TAMANHO DE PULO. 



;-------------LABELS DE INCREMENTO DOS REGISTRADORES-------------------------;
;PS.: ANTES DE INCREMENTAR, CHECA SE CHEGOU AO LIMITE SUPERIOR OU INFERIOR. CASO SIM, FAZ A ALTERAÇÃO NECESSÁRIA

;OS REGISTRADORES ESTÃO EM FORMATO BCD
;----INCREMENTA A HORA DO RELOGIO E VOLTA ----;
INC_REG_HOUR_R:
    CPI R19, 0B0010_0011 ; COMPARA A HORA COM 23
    BREQ AUX_INC_HORA_R; SE A HORA ERA 23, VAI PRA 0.

    CPI R28, 9; R28 É A UNIDADE DI R19 
    BREQ TESTE_INC_HORA_R

    INC R19
    JMP TIMER_H


TESTE_INC_HORA_R:
    CPI R19, 9
    BREQ INC2
    LDI R19, 0B0010_0000
    RJMP TIMER_H
   
INC2:
    LDI R19, 0B0001_0000
    RJMP TIMER_H
   

AUX_INC_HORA_R:
    LDI R19, 0B00000000 ; SE A HORA ERA 23, VAI PRA 0.
    JMP TIMER_H

;----INCREMENTA O MINUTO DO RELOGIO E VOLTA ----;
INC_REG_MIN_R:
    CPI R20, 0B0101_1001 ; COMPARA O MINUTO COM 59
    BREQ AUX_INC_MIN_R ; SE O MINUTO ERA 59, VAI PRA 0

    CPI R28, 9 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_INC_MINUTO_R

    INC R20
    JMP TIMER_M

TEST_INC_MINUTO_R:
	CPI R20, 0B0000_1001 ;VÊ SE É 9
	BREQ INC_MIN_1
	CPI R20, 0B0001_1001 ;VÊ SE É 19
	BREQ INC_MIN_2
	CPI R20, 0B0010_1001 ;VÊ SE É 29
	BREQ INC_MIN_3
	CPI R20, 0B0011_1001 ;VÊ SE É 39
	BREQ INC_MIN_4
	LDI R20, 0B0101_0000 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 49, ENTAO VAI PRA 50
	JMP TIMER_M

INC_MIN_1:
	LDI R20, 0B0001_0000 ;VIRA 10
	JMP TIMER_M

INC_MIN_2:
	LDI R20, 0B0010_0000 ;VIRA 20
	JMP TIMER_M

INC_MIN_3:
	LDI R20, 0B0011_0000 ;VIRA 30
	JMP TIMER_M

INC_MIN_4:
	LDI R20, 0B0100_0000 ;VIRA 40
	JMP TIMER_M

	

AUX_INC_MIN_R:
    LDI R20, 0B00000000 ; SE O MINUTO ERA 59, VAI PRA 0.
    JMP TIMER_M

;----INCREMENTA O DIA DO RELOGIO E VOLTA ----;
INC_REG_WEEK_R:
    CPI R21, 0B00000111 ; COMPARA O DIA COM 7
    BREQ AUX_INC_WEEK_R ; SE O DIA ERA 7, VAI PRA 1
    INC R21
    JMP WEEK

AUX_INC_WEEK_R:
    LDI R21, 0B00000001 ; SE O DIA ERA 7, VAI PRA 1
    JMP WEEK


;----INCREMENTA A HORA INICIAL DO AGENDAMENTO E VOLTA ----;
INC_REG_HOUR_ON:
    CPI R22, 0B0010_0011 ; COMPARA A HORA COM 23
    BREQ AUX_INC_HORA_ON; SE A HORA ERA 23, VAI PRA 0.

    CPI R28, 9; R28 É A UNIDADE DI R19 
    BREQ TESTE_INC_HORA_ON

    INC R22
    JMP ON_H


TESTE_INC_HORA_ON:
   CPI R22, 9
   BREQ INCHON2
   LDI R22, 0B0010_0000
   RJMP ON_H
   
INCHON2:
   LDI R22, 0B0001_0000
   RJMP ON_H
   

AUX_INC_HORA_ON:
    LDI R22, 0B00000000 ; SE A HORA ERA 23, VAI PRA 0.
    JMP ON_H


;----INCREMENTA O MINUTO INICIAL DO AGENDAMENTO E VOLTA ----;
INC_REG_MIN_ON:

    CPI R23, 0B0101_1001 ; COMPARA O MINUTO COM 59
    BREQ AUX_INC_MIN_ON ; SE O MINUTO ERA 59, VAI PRA 0

    CPI R28, 9 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_INC_MINUTO_ON

    INC R23
    JMP ON_M

TEST_INC_MINUTO_ON:
	CPI R23, 0B0000_1001 ;VÊ SE É 9
	BREQ INC_MIN_1ON
	CPI R23, 0B0001_1001 ;VÊ SE É 19
	BREQ INC_MIN_2ON
	CPI R23, 0B0010_1001 ;VÊ SE É 29
	BREQ INC_MIN_3ON
	CPI R23, 0B0011_1001 ;VÊ SE É 39
	BREQ INC_MIN_4ON
	LDI R23, 0B0101_0000 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 49, ENTAO VAI PRA 50
	JMP ON_M

INC_MIN_1ON:
	LDI R23, 0B0001_0000 ;VIRA 10
	JMP ON_M

INC_MIN_2ON:
	LDI R23, 0B0010_0000 ;VIRA 20
	JMP ON_M

INC_MIN_3ON:
	LDI R23, 0B0011_0000 ;VIRA 30
	JMP ON_M

INC_MIN_4ON:
	LDI R23, 0B0100_0000 ;VIRA 40
	JMP ON_M

AUX_INC_MIN_ON:
    LDI R23, 0B00000000 ; SE O MINUTO ERA 59, VAI PRA 0.
    JMP ON_M

;----INCREMENTA O DIA INICAL DO AGENDAMENTO E VOLTA ----;
INC_REG_WEEK_ON:
    CPI R21, 0B00000111 ; COMPARA O DIA COM 7
    BREQ AUX_INC_WEEK_ON ; SE O DIA ERA 7, VAI PRA 1
    INC R21
    JMP WEEK_ON

AUX_INC_WEEK_ON:
    LDI R21, 0B00000001 ; SE O DIA ERA 7, VAI PRA 1
    JMP WEEK_ON

;----INCREMENTA A HORA FINAL DO AGENDAMENTO E VOLTA ----;
INC_REG_HOUR_OFF:
    CPI R25, 0B0010_0011 ; COMPARA A HORA COM 23
   BREQ AUX_INC_HORA_OFF; SE A HORA ERA 23, VAI PRA 0.

   CPI R28, 9; R28 É A UNIDADE DI R19 
   BREQ TESTE_INC_HORA_OFF

   INC R25
   JMP OFF_H


TESTE_INC_HORA_OFF:
   CPI R25, 9
   BREQ INCHOFF2
   LDI R25, 0B0010_0000
   RJMP OFF_H
   
INCHOFF2:
   LDI R25, 0B0001_0000
   RJMP OFF_H
   
AUX_INC_HORA_OFF:
    LDI R25, 0B00000000 ; SE A HORA ERA 23, VAI PRA 0.
    JMP OFF_H

;----INCREMENTA O MINUTO FINAL DO AGENDAMENTO E VOLTA ----;
INC_REG_MIN_OFF:

    CPI R26, 0B0101_1001 ; COMPARA O MINUTO COM 59
    BREQ AUX_INC_MIN_OFF ; SE O MINUTO ERA 59, VAI PRA 0

    CPI R28, 9 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_INC_MINUTO_OFF

    INC R26
    JMP OFF_M

TEST_INC_MINUTO_OFF:
	CPI R26, 0B0000_1001 ;VÊ SE É 9
	BREQ INC_MIN_1OFF
	CPI R26, 0B0001_1001 ;VÊ SE É 19
	BREQ INC_MIN_2OFF
	CPI R26, 0B0010_1001 ;VÊ SE É 29
	BREQ INC_MIN_3OFF
	CPI R26, 0B0011_1001 ;VÊ SE É 39
	BREQ INC_MIN_4OFF
	LDI R26, 0B0101_0000 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 49, ENTAO VAI PRA 50
	JMP OFF_M

INC_MIN_1OFF:
	LDI R26, 0B0001_0000 ;VIRA 10
	JMP OFF_M

INC_MIN_2OFF:
	LDI R26, 0B0010_0000 ;VIRA 20
	JMP OFF_M

INC_MIN_3OFF:
	LDI R26, 0B0011_0000 ;VIRA 30
	JMP OFF_M

INC_MIN_4OFF:
	LDI R26, 0B0100_0000 ;VIRA 40
	JMP OFF_M

AUX_INC_MIN_OFF:
    LDI R26, 0B00000000 ; SE O MINUTO ERA 59, VAI PRA 0.
    JMP OFF_M

;----INCREMENTA O DIA FINAL DO AGENDAMENTO E VOLTA ----;
INC_REG_WEEK_OFF:
    CPI R27, 0B00000111 ; COMPARA O DIA COM 7
    BREQ AUX_INC_WEEK_OFF ; SE O DIA ERA 7, VAI PRA 1
    INC R27
    JMP WEEK_OFF

AUX_INC_WEEK_OFF:
    LDI R27, 0B00000001 ; SE O DIA ERA 7, VAI PRA 1
    JMP WEEK_OFF



;-------------LABELS DE DECREMENTO DOS REGISTRADORES-------------------------;
;PS.: ANTES DE DECREMENTAR, CHECA SE CHEGOU AO LIMITE SUPERIOR OU INFERIOR. CASO SIM, FAZ A ALTERAÇÃO NECESSÁRIA

;----DECREMENTA A HORA DO RELOGIO E VOLTA ----;
DEC_REG_HOUR_R:
   CPI R19, 0B00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_R; SE A HORA ERA 0, VAI PRA 23.

   CPI R28, 0; R28 É A UNIDADE DI R19 
   BREQ TESTE_DEC_HORA_R

   DEC R19
   JMP TIMER_H
   
TESTE_DEC_HORA_R:
   CPI R29, 1
   BREQ DEC2
   LDI R19, 0B0001_1001
   RJMP TIMER_H
   
DEC2:
   LDI R19, 0B0000_1001
   RJMP TIMER_H

AUX_DEC_HORA_R:
    LDI R19, 0B0010_0011; SE A HORA ERA 0, VAI PRA 23.
    JMP TIMER_H

;----DECREMENTA O MINUTO DO RELOGIO E VOLTA ----;
DEC_REG_MIN_R:
    CPI R20, 0B0000_0000 ; COMPARA O MINUTO COM 0
    BREQ AUX_DEC_MIN_R ; SE O MINUTO ERA 0, VAI PRA 59

    CPI R28, 0 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_DEC_MINUTO_R

DEC R20
JMP TIMER_M

TEST_DEC_MINUTO_R:
	CPI R20, 0B0001_0000 ;VÊ SE É 10
	BREQ DEC_MIN_1
	CPI R20, 0B0010_0000 ;VÊ SE É 20
	BREQ DEC_MIN_2
	CPI R20, 0B0011_0000 ;VÊ SE É 30
	BREQ DEC_MIN_3
	CPI R20, 0B0100_0000 ;VÊ SE É 40
	BREQ DEC_MIN_4
	LDI R20, 0B0100_1001 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 50, ENTAO VAI PRA 49
	JMP TIMER_M

DEC_MIN_1:
	LDI R20, 0B0000_1001 ;VIRA 9
	JMP TIMER_M

DEC_MIN_2:
	LDI R20, 0B0001_1001 ;VIRA 19
	JMP TIMER_M

DEC_MIN_3:
	LDI R20, 0B0010_1001 ;VIRA 29
	JMP TIMER_M

DEC_MIN_4:
	LDI R20, 0B0011_1001 ;VIRA 39
	JMP TIMER_M

AUX_DEC_MIN_R:
    LDI R20, 0B0101_1001 ; SE O MINUTO ERA 0, VAI PRA 59.
    JMP TIMER_M

;----DECREMENTA O DIA DO RELOGIO E VOLTA ----;
DEC_REG_WEEK_R:
    CPI R21, 0B00000001 ; COMPARA O DIA COM 1
    BREQ AUX_DEC_WEEK_R ; SE O DIA ERA 1, VAI PRA 7
    DEC R21
    JMP WEEK

AUX_DEC_WEEK_R:
    LDI R21, 0B00000111 ; SE O DIA ERA 1, VAI PRA 7
    JMP WEEK

;----DECREMENTA A HORA INICIAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_HOUR_ON:
   CPI R22, 0B00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_ON; SE A HORA ERA 0, VAI PRA 23.

   CPI R28, 0; R28 É A UNIDADE DI R19 
   BREQ TESTE_DEC_HORA_ON

   DEC R22
   JMP ON_H
   
TESTE_DEC_HORA_ON:
   CPI R29, 1
   BREQ DEC2ON
   LDI R22, 0B0001_1001
   RJMP ON_H
   
DEC2ON:
   LDI R22, 0B0000_1001
   RJMP ON_H

AUX_DEC_HORA_ON:
    LDI R22, 0B0010_0011; SE A HORA ERA 0, VAI PRA 23.
    JMP ON_H


;----DECREMENTA O MINUTO INICIAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_MIN_ON:
    CPI R23, 0B0000_0000 ; COMPARA O MINUTO COM 0
    BREQ AUX_DEC_MIN_ON ; SE O MINUTO ERA 0, VAI PRA 59

    CPI R28, 0 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_DEC_MINUTO_ON

    DEC R23
    JMP ON_M

TEST_DEC_MINUTO_ON:
	CPI R23, 0B0001_0000 ;VÊ SE É 10
	BREQ DEC_MIN_1ON
	CPI R23, 0B0010_0000 ;VÊ SE É 20
	BREQ DEC_MIN_2ON
	CPI R23, 0B0011_0000 ;VÊ SE É 30
	BREQ DEC_MIN_3ON
	CPI R23, 0B0100_0000 ;VÊ SE É 40
	BREQ DEC_MIN_4ON
	LDI R23, 0B0100_1001 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 50, ENTAO VAI PRA 49
	JMP ON_M

DEC_MIN_1ON:
	LDI R23, 0B0000_1001 ;VIRA 9
	JMP ON_M

DEC_MIN_2ON:
	LDI R23, 0B0001_1001 ;VIRA 19
	JMP ON_M

DEC_MIN_3ON:
	LDI R23, 0B0010_1001 ;VIRA 29
	JMP ON_M

DEC_MIN_4ON:
	LDI R23, 0B0011_1001 ;VIRA 39
	JMP ON_M

AUX_DEC_MIN_ON:
    LDI R23, 0B0101_1001 ; SE O MINUTO ERA 0, VAI PRA 59.
    JMP ON_M

;----DECREMENTA O DIA INICAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_WEEK_ON:
    CPI R21, 0B00000001 ; COMPARA O DIA COM 1
    BREQ AUX_DEC_WEEK_ON ; SE O DIA ERA 1, VAI PRA 7
    DEC R21
    JMP WEEK_ON

AUX_DEC_WEEK_ON:
    LDI R21, 0B00000111 ; SE O DIA ERA 1, VAI PRA 7
    JMP WEEK_ON


;----DECREMENTA A HORA FINAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_HOUR_OFF:
   CPI R25, 0B00000000 ; COMPARA A HORA COM 0
   BREQ AUX_DEC_HORA_OFF; SE A HORA ERA 0, VAI PRA 23.

   CPI R28, 0; R28 É A UNIDADE DI R19 
   BREQ TESTE_DEC_HORA_OFF

   DEC R25
   JMP OFF_H
   
TESTE_DEC_HORA_OFF:
   CPI R29, 1
   BREQ DEC2OFF
   LDI R25, 0B0001_1001
   RJMP OFF_H
   
DEC2OFF:
   LDI R25, 0B0000_1001
   RJMP OFF_H

AUX_DEC_HORA_OFF:
    LDI R25, 0B0010_0011; SE A HORA ERA 0, VAI PRA 23.
    JMP OFF_H

;----DECREMENTA O MINUTO FINAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_MIN_OFF:

    CPI R26, 0B0000_0000 ; COMPARA O MINUTO COM 0
    BREQ AUX_DEC_MIN_OFF ; SE O MINUTO ERA 0, VAI PRA 59

    CPI R28, 0 ; R28 UNIDADE DOS MINUTOS TAMBÉM
    BREQ TEST_DEC_MINUTO_OFF

    DEC R26
    JMP OFF_M

TEST_DEC_MINUTO_OFF:
	CPI R26, 0B0001_0000 ;VÊ SE É 10
	BREQ DEC_MIN_1OFF
	CPI R26, 0B0010_0000 ;VÊ SE É 20
	BREQ DEC_MIN_2OFF
	CPI R26, 0B0011_0000 ;VÊ SE É 30
	BREQ DEC_MIN_3OFF
	CPI R26, 0B0100_0000 ;VÊ SE É 40
	BREQ DEC_MIN_4OFF
	LDI R26, 0B0100_1001 ;SE NÃO FOR NENHUM DOS OUTROS, É PQ É 50, ENTAO VAI PRA 49
	JMP OFF_M

DEC_MIN_1OFF:
	LDI R26, 0B0000_1001 ;VIRA 9
	JMP OFF_M

DEC_MIN_2OFF:
	LDI R26, 0B0001_1001 ;VIRA 19
	JMP OFF_M

DEC_MIN_3OFF:
	LDI R26, 0B0010_1001 ;VIRA 29
	JMP OFF_M

DEC_MIN_4OFF:
	LDI R26, 0B0011_1001 ;VIRA 39
	JMP OFF_M

AUX_DEC_MIN_OFF:
    LDI R26, 0B0101_1001 ; SE O MINUTO ERA 0, VAI PRA 59.
    JMP OFF_M

;----DECREMENTA O DIA FINAL DO AGENDAMENTO E VOLTA ----;
DEC_REG_WEEK_OFF:
    CPI R27, 0B00000001 ; COMPARA O DIA COM 1
    BREQ AUX_DEC_WEEK_OFF ; SE O DIA ERA 1, VAI PRA 7
    DEC R27
    JMP WEEK_OFF

AUX_DEC_WEEK_OFF:
    LDI R27, 0B00000111 ; SE O DIA ERA 1, VAI PRA 7
    JMP WEEK_OFF


;;;;--------------------------------------------------------;;;----------------------------------------------------------------------------------------------//;;;----------------

RTC_MINUTOS:
   LDI R16, 0X83 ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
   CBI PORTB, SS1
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO
   RCALL WAIT_MINUTOS
   RCALL DEZENA_MINUTOS
   RCALL DISPLAY_MINUTOS1
   RJMP RTC_HORAS

DISPLAY_MINUTOS1:
   LDI R16, 0X01
   RCALL RUNCMD_MINUTOS1

DISPLAY_MINUTOS2:
  LDI R16, 0X04
  RCALL RUNCMD_MINUTOS2
  RET
   
RTC_HORAS:
   CBI PORTB, SS1
   LDI R16, 0X85 ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO
   RCALL WAIT_HORAS
   RCALL DEZENA_HORAS
   RCALL DISPLAY_HORAS1
   RJMP RTC_DIAS
   
DISPLAY_HORAS1:
   LDI R16, 0X03
   RCALL RUNCMD_HORAS1
   
DISPLAY_HORAS2:
   LDI R16, 0X02
   RCALL RUNCMD_HORAS2
   RET
   
RTC_DIAS:
   LDI R16, 0X8B ;CARREGA O ENDEREÇO DE LEITURA DOS MINUTOS
   CBI PORTB, SS1
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO
   RCALL WAIT_DIAS
   
LEDS1:
   MOV R18, R21
   ANDI R18, 1 ;OPERAÇÃO AND COM 0000 0001
   CPI R18, 1
   BREQ LEDS_DIAS1
 
LEDS2:
   MOV R18, R21
   ANDI R18, 2 ;OPERAÇÃO AND COM 0000 0010
   CPI R18, 2
   BREQ LEDS_DIAS2
   
LEDS3:
   MOV R18, R21
   ANDI R18, 4 ;OPERAÇÃO AND COM 0000 0100
   CPI R18, 4
   BREQ LEDS_DIAS3
   RJMP VOLTA1
   
LEDS_DIAS1:
   SBI PORTC, PC0
   RJMP LEDS2

LEDS_DIAS2:
   SBI PORTC, PC1
   RJMP LEDS3

LEDS_DIAS3:
   SBI PORTC, PC2
   RJMP VOLTA1
  
WAIT_DIAS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_DIAS
   CLR R16
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO DE NOVO COM UM REGISTRADOR VAZIO QUALQUER
   RCALL WAIT_DIAS2
   
   IN R21, SPDR ;LER OS DADOS RECEBIDOS NO REGISTRADOR 29  
   RET
   
WAIT_DIAS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_DIAS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET
   
WAIT_MINUTOS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_MINUTOS
   CLR R16
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO DE NOVO COM UM REGISTRADOR VAZIO QUALQUER
   RCALL WAIT_MINUTOS2
   
   IN R20, SPDR ;LER OS DADOS RECEBIDOS NO REGISTRADOR 29  
   RET
   
WAIT_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_MINUTOS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET
   
WAIT_HORAS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_HORAS
   CLR R16
   OUT SPDR, R16 ;ENVIAR O ENDEREÇO
   RCALL WAIT_HORAS2
   
   IN R19, SPDR ;LER OS DADOS RECEBIDOS NO REGISTRADOR 29
   RET

WAIT_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP WAIT_HORAS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET

RUNCMD:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
WAIT1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP WAIT1
   
   OUT SPDR, R29
   
WAIT2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP WAIT2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
;FIM DA TRANSMISSÃO

;;;;;;;;;;;;;;;;;;MINUTOS 1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
RUNCMD_MINUTOS1:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
WAIT1_MINUTOS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP WAIT1_MINUTOS1
   
   OUT SPDR, R28
   
WAIT2_MINUTOS1:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP WAIT2_MINUTOS1
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
   
;;;;;;;;;;;;;;;;;;MINUTOS 2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
RUNCMD_MINUTOS2:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
WAIT1_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP WAIT1_MINUTOS2
   
   OUT SPDR, R29
   
WAIT2_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP WAIT2_MINUTOS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET

;;;;;;;;;;;;;;;;;;;HORAS 1;;;;;;;;;;;;;;;;;;;;;;;   
RUNCMD_HORAS1:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
WAIT1_HORAS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP WAIT1_HORAS1
   
   CLR R30
   OUT SPDR, R28
   
WAIT2_HORAS1:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP WAIT2_HORAS1
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET

;;;;;;;;;;;;;;;;;;HORAS 2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
RUNCMD_HORAS2:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
WAIT1_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP WAIT1_HORAS2
   
   OUT SPDR, R29
   
WAIT2_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP WAIT2_HORAS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
   
DEZENA_MINUTOS:
   MOV R29, R20
   ANDI R29, 112 ; OPERAÇÃO AND COM 0111 0000
   LSR R29 ; 0011 1000
   LSR R29 ; 0001 1100
   LSR R29 ; 0000 1110
   LSR R29 ; 0000 0111
   MOV R28, R20
   ANDI R28, 15 ; AND COM 0000 1111
   RET

DEZENA_MINUTOS_ON:
   MOV R29, R23
   ANDI R29, 112 ; OPERAÇÃO AND COM 0111 0000
   LSR R29 ; 0011 1000
   LSR R29 ; 0001 1100
   LSR R29 ; 0000 1110
   LSR R29 ; 0000 0111
   MOV R28, R23
   ANDI R28, 15 ; AND COM 0000 1111
   RET
   
DEZENA_MINUTOS_OFF:
   MOV R29, R26
   ANDI R29, 112 ; OPERAÇÃO AND COM 0111 0000
   LSR R29 ; 0011 1000
   LSR R29 ; 0001 1100
   LSR R29 ; 0000 1110
   LSR R29 ; 0000 0111
   MOV R28, R26
   ANDI R28, 15 ; AND COM 0000 1111
   RET

DEZENA_HORAS:
   MOV R29, R19
   ANDI R29, 48 ; OPERAÇÃO AND COM 0011 0000
   LSR R29 ; 0001 1000
   LSR R29 ; 0000 1100
   LSR R29 ; 0000 0110
   LSR R29 ; 0000 0011
   MOV R28, R19
   ANDI R28, 15 ; AND COM 0000 1111
   RET

DEZENA_HORAS_ON:
   MOV R29, R22
   ANDI R29, 48 ; OPERAÇÃO AND COM 0011 0000
   LSR R29 ; 0001 1000
   LSR R29 ; 0000 1100
   LSR R29 ; 0000 0110
   LSR R29 ; 0000 0011
   MOV R28, R22
   ANDI R28, 15 ; AND COM 0000 1111
   RET

DEZENA_HORAS_OFF:
   MOV R29, R25
   ANDI R29, 48 ; OPERAÇÃO AND COM 0011 0000
   LSR R29 ; 0001 1000
   LSR R29 ; 0000 1100
   LSR R29 ; 0000 0110
   LSR R29 ; 0000 0011
   MOV R28, R25
   ANDI R28, 15 ; AND COM 0000 1111
   RET
   
;;;;;;;;;;;;;;;;;;ESCREVE HORAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
ENVIA_HORAS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_HORAS
   
   OUT SPDR, R19 ;ENVIAR OS DADOS
   RCALL ENVIA_HORAS2
  
   RET

ENVIA_HORAS_ON:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_HORAS
   
   OUT SPDR, R22 ;ENVIAR OS DADOS
   RCALL ENVIA_HORAS2
  
   RET

ENVIA_HORAS_OFF:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_HORAS
   
   OUT SPDR, R25 ;ENVIAR OS DADOS
   RCALL ENVIA_HORAS2
  
   RET

ENVIA_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_HORAS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET
   
APAGA_DISPLAY_MINUTOS:
   LDI R16, 0X01
   RCALL APAGA1_MINUTOS
   
APAGA_DISPLAY_MINUTOS2:
   LDI R16, 0X04
   RCALL APAGA2_MINUTOS
   RET
    
APAGA1_MINUTOS:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
APAGA1_MINUTOS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP APAGA1_MINUTOS1
   
   LDI R16, 0B01111111
   OUT SPDR, R16
   
APAGA1_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP APAGA1_MINUTOS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
   
APAGA2_MINUTOS:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
APAGA2_MINUTOS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP APAGA2_MINUTOS1
   
   LDI R16, 0B01111111
   OUT SPDR, R16
   
APAGA2_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP APAGA2_MINUTOS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
;;;;;;;;;;;;;;;;;ACABA ESCREVE HORAS;;;;;;;;;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;;;ESCREVE MINUTOS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ENVIA_MINUTOS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_MINUTOS
   
   OUT SPDR, R20 ;ENVIAR OS DADOS
   RCALL ENVIA_MINUTOS2
  
   RET

ENVIA_MINUTOS_ON:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_MINUTOS
   
   OUT SPDR, R23 ;ENVIAR OS DADOS
   RCALL ENVIA_MINUTOS2
  
   RET

ENVIA_MINUTOS_OFF:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_MINUTOS
   
   OUT SPDR, R26 ;ENVIAR OS DADOS
   RCALL ENVIA_MINUTOS2
  
   RET

ENVIA_MINUTOS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_MINUTOS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET
   
APAGA_DISPLAY_HORAS:
   LDI R16, 0X03
   RCALL APAGA1_HORAS
   
APAGA_DISPLAY_HORAS2:
   LDI R16, 0X02
   RCALL APAGA2_HORAS
   RET
    
APAGA1_HORAS:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
APAGA1_HORAS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP APAGA1_HORAS1
   
   LDI R16, 0B01111010
   OUT SPDR, R16
   
APAGA1_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP APAGA1_HORAS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
   
APAGA2_HORAS:
   CBI PORTB, SS2 ; COMEÇA A TRANSMISSÃO PARA O DISPLAY DRIVER
   OUT SPDR, R16
   
APAGA2_HORAS1:
   IN R30, SPSR
   SBRS R30, SPIF ;PULA PARA PRÓXIMA INSTRUÇÃO SE SPIF FOR 1
   RJMP APAGA2_HORAS1
   
   LDI R16, 0B01111010
   OUT SPDR, R16
   
APAGA2_HORAS2:
   IN R30, SPSR
   SBRS R30, SPIF 
   RJMP APAGA2_HORAS2
   
   SBI PORTB, SS2; TERMINA A TRANSMISSÃO
   RET
;;;;;;;;;;;;;;;;;;;;;FIM ESCREVE MINUTOS;;;;;;;;;;;;;;;;



;;;;;;;;;;;;;;DIAS;;;;;;;;;;;;;;;
ENVIA_DIAS:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_DIAS
   
   OUT SPDR, R21 ;ENVIAR OS DADOS
   RCALL ENVIA_DIAS2
  
   RET

ENVIA_DIAS_ON:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_DIAS_ON
   
   OUT SPDR, R21 ;ENVIAR OS DADOS
   RCALL ENVIA_DIAS2
  
   RET

ENVIA_DIAS_OFF:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_DIAS_OFF
   
   OUT SPDR, R27 ;ENVIAR OS DADOS
   RCALL ENVIA_DIAS2
  
   RET

ENVIA_DIAS2:
   IN R30, SPSR
   SBRS R30, SPIF ;ESPERA A FLAG DE FIM DE TRANSFERÊNCIA ATIVAR
   RJMP ENVIA_DIAS2
   SBI PORTB, SS1 ;DESABILITA O SLAVE DEVICE
   RET
   
   ;----------------------------------
COMP_H:
   CPSE R19, R22
   RJMP RUNEAE
   RJMP COMP_M

COMP_M:
   CPSE R20, R23
   RJMP RUNEAE
   RJMP COMP_W

COMP_W:
   CPSE R21, R24
   RJMP RUNEAE

LIGA_ALARME:
   SBI	PORTB, 7

;==== TESTA FIM DO ALARME ======
COMP_H_OFF:
   CPSE R25, R19
   RJMP RUNEAE

COMP_M_OFF:
   CPSE R26, R20
   RJMP RUNEAE

COMP_W_OFF:
   CPSE R27, R21
   RJMP RUNEAE
   RJMP DESLIGA_ALARME
   
 ;===== DESLIGA ALARME =====
DESLIGA_ALARME:
   CBI	PORTB, 7
   RJMP RUNEAE
